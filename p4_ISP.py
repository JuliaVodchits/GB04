# Принцип разделения интерфейсов (ISP, Interface Segregation Principle)
# Клиенты не должны быть вынуждены зависеть от интерфейсов, которые они не используют.
# Суть в создании специализированных интерфейсов вместо одного, делающего всё подряд.
# Это упрощает внедрение зависимостей и повышает гибкость системы.Объекты в программе
# должны быть заменяемыми на экземпляры подтипов без влияния на правильность программы.
# Это значит, что объекты производного класса должны иметь возможность заменить объекты
# базового класса без изменения работы программы.

# 1. Код не использующий этот принцип
# class SmartHouse():
#     def turn_on_light(self):
#         pass
#
#     def heat_food(self):
#         pass
#
#     def turn_on_music(self):
#         pass

#2. Исправленный код
class Light():
    def turn_on_light(self):
        print("Свет включен")


class Food():
    def heat_food(self):
        print("Еда начала разогреваться")

class Music():
    def turn_on_music(self):
        print("Включаю музыку")


